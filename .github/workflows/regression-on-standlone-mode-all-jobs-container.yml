name: Regression Test on Standlone Mode ALL Jobs container

on:
  #schedule:
    #- cron: '0 16 * * *'
  workflow_dispatch:
    inputs:
      JobName:
        description: 'job name'
        required: true
        default: 'all'
        type: choice
        options:
        - all-jobs
        - build_verification_test
        - load_data_20_col_test
        - load_data_100_col_test
        - load_data_200_col_test
        - ssb_benchmark_test
        - tpch_benchmark_test
        - oltp_point_select_test
        - oltp_update_test
        - oltp_insert_test
        - oltp_delete_test
        - tpcc_benchmark_test
      Repo:
        required: true
        default: 'zhangxu19830126/matrixone'
        type: string
      Ref:
        required: true
        default: 'b8cf6e63cdb8d7d3b95ccddf2cbb1646466c9c9c'
        type: string
      RunTimes:
        required: true
        default: 5
        type: int
      Scale:
        required: true
        default: 10
        type: int
      OLTP_TableNum:
        required: true
        default: 10
        type: int
      OLTP_TableSize:
        required: true
        default: 100000
        type: int
      OLTP_ThreadNum:
        required: true
        default: 1000
        type: int
      TPCC_WarehouseNum:
        required: true
        default: 10
        type: int
      TPCC_TerminalNum:
        required: true
        default: 50
        type: int


jobs:
  build_verification_test:
    if: ${{ inputs.JobName  == 'all-jobs' }}
    runs-on: runner_auto_test
    name: Build Verification Test
    container:
      image: matrixorigin/debugtools:0.1.1
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          echo $GITHUB_WORKSPACE
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-tester
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tester
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-tester
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start BVT Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          #cp -r $GITHUB_WORKSPACE/mo-tester /data/runner/$tempdir/
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-tester
          ./run.sh -n -g -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone/test/distributed/cases -t ${{ inputs.RunTimes }} 2>&1

  load_data_20_col_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: build_verification_test
    name: LOAD DATA 20 COLUMNS TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2

      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start LOAD DATA 20 Columns Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/20_columns 20_columns
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/20_columns -m 2>&1

  load_data_100_col_test:
    if: ${{ inputs.JobName  == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test]
    name: LOAD DATA 100 COLUMNS TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start LOAD DATA 100 Columns Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/100_columns 100_columns
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/100_columns -m 2>&1

  load_data_200_col_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test]
    name: LOAD DATA 200 COLUMNS TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start LOAD DATA 200 Columns Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/200_columns 200_columns
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/200_columns -m 2>&1

  ssb_benchmark_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test]
    name: SSB BENCHMARK TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          ln /usr/bin/python3 /usr/bin/python
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-ssb
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-ssb
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-ssb
          ref: main

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Load ${{ inputs.Scale }} SSB Data
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/ssb/${{ inputs.Scale }} ssb_${{ inputs.Scale }}
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/ssb_${{ inputs.Scale }} -m
          sleep 50s

      - name: Start SSB ${{ inputs.Scale }}G multi table Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-ssb
          ./run.sh -q all -s ${{ inputs.Scale }} -t ${{ inputs.RunTimes }}


  tpch_benchmark_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test]
    name: TPCH BENCHMARK TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          ln /usr/bin/python3 /usr/bin/python
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-tpch
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tpch
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-tpch
          ref: main

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Load TPCH ${{ inputs.Scale }}G Data
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/tpch/${{ inputs.Scale }} tpch_${{ inputs.Scale }}
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/tpch_${{ inputs.Scale }} -m
          sleep 50s

      - name: Start TPCH ${{ inputs.Scale }}G multi table Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-tpch
          ./run.sh -q all -s ${{ inputs.Scale }} -t ${{ inputs.RunTimes }}

  oltp_point_select_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test,tpch_benchmark_test]
    name: OLTP POINT SELECT TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-sysbench
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-sysbench
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-sysbench
          ref: main

      - name: Checkout mo-load
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Prepare Data of ${{ inputs.OLTP_TableNum }}-tables-${{ inputs.OLTP_TableSize }}-per-table
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-sysbench
          mysql -h127.0.0.1 -udump -p111 -P6001 -e "create database if not exists sbtest;"
          sysbench  --mysql-host=127.0.0.1 --mysql-port=6001 --mysql-user=dump --mysql-password=111 oltp_common.lua  --mysql-db=sbtest --tables=${{ inputs.OLTP_TableNum }} --table_size=--tables=${{ inputs.OLTP_TableSize }} --threads=1 --time=30 --report-interval=10 --create_secondary=off  --auto_inc=off prepare
          sleep 50s

      - name: Start OLTP Point Select Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load
          ./start.sh -c cases/sysbench/point_select_${{ inputs.OLTP_TableNum }}_${{ inputs.OLTP_TableSize }} -t ${{ inputs.OLTP_ThreadNum }}

  oltp_update_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test,tpch_benchmark_test,oltp_point_select_test]
    name: OLTP UPDATE TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-sysbench
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-sysbench
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-sysbench
          ref: main

      - name: Checkout mo-load
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Prepare Data of ${{ inputs.OLTP_TableNum }}-tables-${{ inputs.OLTP_TableSize }}-per-table
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-sysbench
          mysql -h127.0.0.1 -udump -p111 -P6001 -e "create database if not exists sbtest;"
          sysbench  --mysql-host=127.0.0.1 --mysql-port=6001 --mysql-user=dump --mysql-password=111 oltp_common.lua  --mysql-db=sbtest --tables=${{ inputs.OLTP_TableNum }} --table_size=--tables=${{ inputs.OLTP_TableSize }} --threads=1 --time=30 --report-interval=10 --create_secondary=off  --auto_inc=off prepare
          sleep 50s

      - name: Start OLTP UPDATE Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load
          ./start.sh -c cases/sysbench/update_pk_${{ inputs.OLTP_TableNum }}_${{ inputs.OLTP_TableSize }} -t ${{ inputs.OLTP_ThreadNum }}

  oltp_insert_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test,tpch_benchmark_test,oltp_point_select_test,oltp_update_test]
    name: OLTP INSERT TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-sysbench
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-sysbench
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-sysbench
          ref: main

      - name: Checkout mo-load
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Prepare Data of ${{ inputs.OLTP_TableNum }}-tables-${{ inputs.OLTP_TableSize }}-per-table
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-sysbench
          mysql -h127.0.0.1 -udump -p111 -P6001 -e "create database if not exists sbtest;"
          sysbench  --mysql-host=127.0.0.1 --mysql-port=6001 --mysql-user=dump --mysql-password=111 oltp_common.lua  --mysql-db=sbtest --tables=${{ inputs.OLTP_TableNum }} --table_size=--tables=${{ inputs.OLTP_TableSize }} --threads=1 --time=30 --report-interval=10 --create_secondary=off  --auto_inc=off prepare
          sleep 50s

      - name: Start OLTP INSERT Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load
          ./start.sh -c cases/sysbench/simple_insert_${{ inputs.OLTP_TableNum }}_${{ inputs.OLTP_TableSize }} -t ${{ inputs.OLTP_ThreadNum }}

  oltp_delete_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test,tpch_benchmark_test,oltp_point_select_test,oltp_update_test,oltp_insert_test]
    name: OLTP DELETE TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-sysbench
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-sysbench
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-sysbench
          ref: main

      - name: Checkout mo-load
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Prepare Data of ${{ inputs.OLTP_TableNum }}-tables-${{ inputs.OLTP_TableSize }}-per-table
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-sysbench
          mysql -h127.0.0.1 -udump -p111 -P6001 -e "create database if not exists sbtest;"
          sysbench  --mysql-host=127.0.0.1 --mysql-port=6001 --mysql-user=dump --mysql-password=111 oltp_common.lua  --mysql-db=sbtest --tables=${{ inputs.OLTP_TableNum }} --table_size=--tables=${{ inputs.OLTP_TableSize }} --threads=1 --time=30 --report-interval=10 --create_secondary=off  --auto_inc=off prepare
          sleep 50s

      - name: Start OLTP DELETE Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load
          ./start.sh -c cases/sysbench/delete_pk_${{ inputs.OLTP_TableNum }}_${{ inputs.OLTP_TableSize }} -t ${{ inputs.OLTP_ThreadNum }}

  tpcc_benchmark_test:
    if: ${{ inputs.JobName == 'all-jobs' }}
    runs-on: runner_auto_test
    needs: [build_verification_test,load_data_20_col_test,load_data_100_col_test,load_data_200_col_test,ssb_benchmark_test,tpch_benchmark_test,oltp_point_select_test,oltp_update_test,oltp_insert_test,oltp_delete_test]
    name: TPCC BENCHMARK TEST
    container:
      image: matrixorigin/golang:1.19-ubuntu2204
      volumes:
        - /data/load_data:/data/load_data

    steps:
      - name: Prepare Test ENV
        run: |
          mkdir -p $GITHUB_WORKSPACE/container/${{ github.run_id }}/
          apt-get update
          apt-get install git vim net-tools mysql-client openjdk-8-jdk sysbench bc pip -y
          pip3 install PyYAML==6.0
          pip3 install shyaml==0.6.2


      - name: Checkout MatrixOne
        uses: actions/checkout@v2
        with:
          path: ./container/${{ github.run_id }}/matrixone
          repository: ${{ inputs.Repo }}
          ref: ${{ inputs.Ref }}

      - name: Checkout mo-tpcc
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-tpcc
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-tpcc
          ref: main

      - name: Checkout mo-load-data
        uses: actions/checkout@v2
        with:
          repository: matrixorigin/mo-load-data
          token: ${{secrets.TOOL_REPO_TOKEN}}
          path: ./container/${{ github.run_id }}/mo-load-data
          ref: main

      - name: Build and Start MO Service
        run: |
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/matrixone
          make build
          ./optools/run_bvt.sh . launch-tae-CN-tae-DN
          locale
          sleep 50s
          commit_id=$(git rev-parse --short HEAD)
          echo $commit_id

      - name: Start Load TPCC ${{ inputs.TPCC_WarehouseNum }} Warehouse Data
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data/data
          ln -s /data/load_data/tpcc_${{ inputs.TPCC_WarehouseNum }} tpcc_${{ inputs.TPCC_WarehouseNum }}
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-load-data
          ./load.sh -c cases/tpcc_${{ inputs.TPCC_WarehouseNum }} -m
          sleep 50s

      - name: Start OLTP TPCC ${{ inputs.TPCC_WarehouseNum }} Warehouses ${{ inputs.TPCC_TerminalNum }} terminals Test
        if: ${{ always() && !cancelled() }}
        run: |
          export LC_ALL="C.UTF-8"
          locale
          cd $GITHUB_WORKSPACE/container/${{ github.run_id }}/mo-tpcc
          cp props.mo props_${{ inputs.TPCC_WarehouseNum }}.mo
          sed -i '/.*terminals=*/c\terminals=${{ inputs.TPCC_TerminalNum }}' props_${{ inputs.TPCC_WarehouseNum }}.mo
          sed -i '/.*warehouses=*/c\/c\warehouses=${{ inputs.TPCC_WarehouseNum }}' props_${{ inputs.TPCC_WarehouseNum }}.mo
          sed -i 's/tpcc/tpcc_${{ inputs.TPCC_WarehouseNum }}/g' props_${{ inputs.TPCC_WarehouseNum }}.mo
          sed -i 's/runMins=1/runMins=10/g' props_${{ inputs.TPCC_WarehouseNum }}.mo
          ./runBenchmark.sh props_${{ inputs.TPCC_WarehouseNum }}.mo
